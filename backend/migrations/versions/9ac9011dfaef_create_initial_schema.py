"""Create initial schema

Revision ID: 9ac9011dfaef
Revises: 
Create Date: 2025-06-10 01:09:40.413620

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9ac9011dfaef'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Book', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_constraint(batch_op.f('Book_genreID_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('Book_publisherID_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('Book_franchiseID_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'Franchise', ['franchiseID'], ['id'])
        batch_op.create_foreign_key(None, 'Genre', ['genreID'], ['id'])
        batch_op.create_foreign_key(None, 'Publisher', ['publisherID'], ['id'])

    with op.batch_alter_table('Crew', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_constraint(batch_op.f('Crew_titleID_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'Titles', ['titleID'], ['id'])

    with op.batch_alter_table('Episode', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_constraint(batch_op.f('Episode_seasonID_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'Season', ['seasonID'], ['id'])

    with op.batch_alter_table('Franchise', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Genre', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Job', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Movie', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_constraint(batch_op.f('Movie_franchiseID_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('Movie_genreID_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('Movie_publisherID_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'Franchise', ['franchiseID'], ['id'])
        batch_op.create_foreign_key(None, 'Genre', ['genreID'], ['id'])
        batch_op.create_foreign_key(None, 'Publisher', ['publisherID'], ['id'])

    with op.batch_alter_table('Publisher', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Reply', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_constraint(batch_op.f('Reply_userID_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('Reply_topicID_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'User', ['userID'], ['id'])
        batch_op.create_foreign_key(None, 'Topic', ['topicID'], ['id'])

    with op.batch_alter_table('Season', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_constraint(batch_op.f('Season_showID_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'Show', ['showID'], ['id'])

    with op.batch_alter_table('Show', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_constraint(batch_op.f('Show_genreID_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('Show_publisherID_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('Show_franchiseID_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'Genre', ['genreID'], ['id'])
        batch_op.create_foreign_key(None, 'Franchise', ['franchiseID'], ['id'])
        batch_op.create_foreign_key(None, 'Publisher', ['publisherID'], ['id'])

    with op.batch_alter_table('Titles', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Topic', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('Topic_titleID_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'Titles', ['titleID'], ['id'])

    with op.batch_alter_table('Type', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('last_login',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
        batch_op.alter_column('is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.create_unique_constraint(None, ['id'])

    with op.batch_alter_table('UserRelationship', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_constraint(batch_op.f('UserRelationship_RelatingUserID_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'User', ['RelatedUserID'], ['id'])
        batch_op.create_foreign_key(None, 'User', ['RelatingUserID'], ['id'])

    with op.batch_alter_table('WatchElement', schema=None) as batch_op:
        batch_op.add_column(sa.Column('watchlist_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('title_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('progress', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('start_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('end_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('is_favorite', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('score',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               existing_nullable=True)
        batch_op.create_unique_constraint('unique_watchlist_item', ['watchlist_id', 'title_id'])
        batch_op.drop_constraint(batch_op.f('WatchElement_titleID_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('WatchElement_watchlistID_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'Watchlist', ['watchlist_id'], ['id'])
        batch_op.create_foreign_key(None, 'Titles', ['title_id'], ['id'])
        batch_op.drop_column('watchlistID')
        batch_op.drop_column('startDate')
        batch_op.drop_column('favourite')
        batch_op.drop_column('endDate')
        batch_op.drop_column('titleID')

    with op.batch_alter_table('Watchlist', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint(batch_op.f('Watchlist_userID_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'User', ['user_id'], ['id'])
        batch_op.drop_column('userID')

    with op.batch_alter_table('Worker', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Worker', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Watchlist', schema=None) as batch_op:
        batch_op.add_column(sa.Column('userID', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('Watchlist_userID_fkey'), 'User', ['userID'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('WatchElement', schema=None) as batch_op:
        batch_op.add_column(sa.Column('titleID', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('endDate', sa.DATE(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('favourite', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('startDate', sa.DATE(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('watchlistID', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('WatchElement_watchlistID_fkey'), 'Watchlist', ['watchlistID'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('WatchElement_titleID_fkey'), 'Titles', ['titleID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.drop_constraint('unique_watchlist_item', type_='unique')
        batch_op.alter_column('score',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('notes')
        batch_op.drop_column('is_favorite')
        batch_op.drop_column('end_date')
        batch_op.drop_column('start_date')
        batch_op.drop_column('progress')
        batch_op.drop_column('title_id')
        batch_op.drop_column('watchlist_id')

    with op.batch_alter_table('UserRelationship', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('UserRelationship_RelatingUserID_fkey'), 'User', ['RelatingUserID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
        batch_op.alter_column('last_login',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))

    with op.batch_alter_table('Type', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Topic', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('Topic_titleID_fkey'), 'Titles', ['titleID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')

    with op.batch_alter_table('Titles', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Show', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('Show_franchiseID_fkey'), 'Franchise', ['franchiseID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('Show_publisherID_fkey'), 'Publisher', ['publisherID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('Show_genreID_fkey'), 'Genre', ['genreID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Season', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('Season_showID_fkey'), 'Show', ['showID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Reply', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('Reply_topicID_fkey'), 'Topic', ['topicID'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('Reply_userID_fkey'), 'User', ['userID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Publisher', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Movie', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('Movie_publisherID_fkey'), 'Publisher', ['publisherID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('Movie_genreID_fkey'), 'Genre', ['genreID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('Movie_franchiseID_fkey'), 'Franchise', ['franchiseID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Job', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Genre', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Franchise', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Episode', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('Episode_seasonID_fkey'), 'Season', ['seasonID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Crew', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('Crew_titleID_fkey'), 'Titles', ['titleID'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('Book', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('Book_franchiseID_fkey'), 'Franchise', ['franchiseID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('Book_publisherID_fkey'), 'Publisher', ['publisherID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('Book_genreID_fkey'), 'Genre', ['genreID'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###
